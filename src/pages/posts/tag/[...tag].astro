---
import MainLayout from "../../../layouts/MainLayout.astro";
import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";
import ArticleCard from "../../../components/ArticleCard.astro";
import { capitalise } from "../../../utils";
import Button from "../../../components/Button.astro";

const allBlogArticles: CollectionEntry<"blog">[] = (
  await getCollection("blog")
).sort(
  (a: CollectionEntry<"blog">, b: CollectionEntry<"blog">) =>
    b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);

const { tag } = Astro.params;

if (tag === undefined) {
  throw new Error("Tag is required in params");
}

const tagArticles = allBlogArticles.filter((article) =>
  article.data.tags.includes(tag)
);

export const prerender = false;
---

<MainLayout title=`${tag} tags`>
  <div class="flex justify-between items-center pb-3">
    <h1 class="text-2xl font-bold">#{capitalise(tag)} Posts</h1>
    <Button buttonText="All posts" destination="/posts" />
  </div>

  <div class="grid grid-cols-1 gap-4 sm:grid-cols-2">
    {
      tagArticles.map((article) => (
        <>
          <ArticleCard article={article} />
        </>
      ))
    }
  </div>
</MainLayout>
